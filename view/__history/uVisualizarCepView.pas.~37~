unit uVisualizarCepView;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.Grids, Vcl.DBGrids,
  uCepController, FireDAC.DApt, FireDAC.Phys.PG, FireDAC.Phys.PGDef,
  FireDAC.Phys.FB, FireDAC.Phys.FBDef;

type
  TfrmVisualizar = class(TForm)
    DBGrid1: TDBGrid;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
  private
  FDMemTable: TFDMemTable;
  DataSource: TDataSource;
    { Private declarations }
  public
  Cep: string;
    { Public declarations }
  end;

var
  frmVisualizar: TfrmVisualizar;

implementation

{$R *.dfm}

procedure TfrmVisualizar.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  FreeAndNil(FDMemTable);
  FreeAndNil(DataSource);

  frmVisualizar := nil;
  Action        := caFree;
end;

procedure TfrmVisualizar.FormShow(Sender: TObject);
var
  VQuery: TFDQuery;
begin
  FDMemTable := TFDMemTable.Create(nil);
  DataSource := TDataSource.Create(nil);

  VQuery := TCepController.GetInstance.PesquisarCep(Cep);
  try
    if VQuery.IsEmpty then
    begin
      TCepController.GetInstance.PesquisarCepAPI(Cep);
      VQuery := TCepController.GetInstance.PesquisarCep(Cep);
    end;

     VQuery.FetchAll;
     FDMemTable.Data := VQuery.Data;

     DataSource.DataSet := FDMemTable;
     DBGrid1.DataSource := DataSource;
  finally
    VQuery.Close;
    FreeAndNil(VQuery);
  end;
end;
end.
